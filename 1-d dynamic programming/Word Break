Word Break
---------------------------
Time Complexity - O(n*m*t)
Space Complexity - O(n)

n - length of string s
m - number of words in wordDict
t - max length of any word in wordDict
--------------------------
class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
       int n = s.length();
       boolean[] dp = new boolean[n+1];
       dp[0] = true;
       for(int i=1;i<=n;i++){
         for(String word : wordDict){
            int len = word.length();
            if(i >= len && dp[i-len]){
                if(s.substring(i-len,i).equals(word)){
                    dp[i] = true;
                    break;
                }
            }
         }
       }
       return dp[n];
    }
}
