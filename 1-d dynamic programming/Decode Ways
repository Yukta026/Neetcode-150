Decode Ways using bottom up dynamic programming
-----------------------------------------------
Time Complexity - O(n)
Space Complexity - O(n)
-----------------------------------------------
class Solution {
    public int numDecodings(String s) {
       int n = s.length();
       if(n ==0 || s.charAt(0) == '0'){
        return 0;
       }
       ArrayList<Integer> dp = new ArrayList<>();
       for(int i=0;i<=n;i++){
        dp.add(0);
       }
       
       dp.set(n,1);

       for(int i=n-1;i>= 0;i--){
// Ways for single digit - dp[i] = dp[i+1]
            if(s.charAt(i) != '0'){
                dp.set(i,dp.get(i+1));
            }
// Ways for two digit - dp[i] += dp[i+2]
            if((i+1 < n) && ((s.charAt(i) == '1' && s.charAt(i+1) <= '9') || (s.charAt(i) == '2' && s.charAt(i+1) <= '6'))){
                dp.set(i,dp.get(i) + dp.get(i+2));
            }
       }
       return dp.get(0);
    }
}
