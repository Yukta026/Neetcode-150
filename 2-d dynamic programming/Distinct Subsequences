Distinct Subsequences using memoization
---------------------------------------
Time Complexity - O(m*n)
Space Complexity - O(m*n)
---------------------------------------
class Solution {
    public int numDistinct(String s, String t) {
        int[][] dp = new int[s.length()][t.length()];

        for(int i=0;i<s.length();i++){
            Arrays.fill(dp[i],-1);
        }
        return helper(s,t,dp,0,0);
    }
    public int helper(String s,String t,int[][] dp,int i,int j){
 
        if(j == t.length()){ return 1;}
        if(i == s.length()){ return 0;}

        if(dp[i][j] != -1){
            return dp[i][j];
        }
// If element dont match then skip current element
        int count = helper(s,t,dp,i+1,j);
        if(s.charAt(i) == t.charAt(j)){
            count += helper(s,t,dp,i+1,j+1);
        }

        return dp[i][j] = count;
    }
}
