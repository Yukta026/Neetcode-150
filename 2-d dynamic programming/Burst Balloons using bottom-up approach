Burst Balloons using bottom-up approach
---------------------------------------
Time Complexity - O(n^3)
Space Complexity - O(n^2)
---------------------------------------
class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length;
        int[][] dp = new int[n+2][n+2];
        int[] arr = new int[n+2];
        arr[0] = arr[n+1] = 1;

        for(int i=1;i<=n;i++){
            arr[i] = nums[i-1];
        }
        for(int len=2;len<arr.length;len++){
            for(int i=0;i<arr.length-len;i++){
                int j = i + len;
                
                int num = 0;
                for(int k = i+1;k < j;k++){
                    num = Math.max(num, arr[i]*arr[k]*arr[j]+dp[i][k]+dp[k][j]);
                }
                dp[i][j] = num;
            }
        }
               
            
        
        return dp[0][n+1];
    }
}
