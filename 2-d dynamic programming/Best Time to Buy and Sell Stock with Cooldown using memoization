Best Time to Buy and Sell Stock with Cooldown using memoization
---------------------------------------------------------------
Time Complexity - O(N)
Space Complexity - O(N)
---------------------------------------------------------------
class Solution {
    public int maxProfit(int[] prices) {
        int n = prices.length;
        int[][] dp = new int[n][2];

        for(int i=0;i<n;i++){
            Arrays.fill(dp[i],-1);
        }
        int canBuy = 1;
        return dfs(0,canBuy,n,dp,prices);
    }

    public int dfs(int i,int canBuy,int n,int[][] dp,int[] prices){

        if(i>=n){return 0;}
        
        if(dp[i][canBuy] != -1) {return dp[i][canBuy];}

        if(canBuy == 1){
            dp[i][1] = Math.max(-prices[i]+ dfs(i+1,0,n,dp,prices),dfs(i+1,1,n,dp,prices));
        }
        else{
            dp[i][0] = Math.max(prices[i] + dfs(i+2,1,n,dp,prices),dfs(i+1,0,n,dp,prices));
        }
        return dp[i][canBuy];
    }

}
